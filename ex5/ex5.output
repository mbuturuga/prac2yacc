State 32 conflicts: 4 shift/reduce
State 33 conflicts: 4 shift/reduce


Grammar

    0 $accept: input $end

    1 input: formula_list
    2      | %empty

    3 formula_list: formula_list formula
    4             | formula

    5 formula: wff EOL
    6        | error EOL

    7 wff: EOL
    8    | atomic_formula
    9    | composite_formula

   10 composite_formula: FORALL VAR wff
   11                  | EXISTS VAR wff
   12                  | '(' wff ')'
   13                  | NOT wff
   14                  | wff AND wff
   15                  | wff OR wff
   16                  | wff IMPLIES wff
   17                  | wff IFF wff

   18 atomic_formula: PRED '(' term_list ')'

   19 term_list: term_list ',' term
   20          | term

   21 term: VAR
   22     | CONST
   23     | FUNC '(' term_list ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12 18 23
    ')' (41) 12 18 23
    ',' (44) 19
    error (256) 6
    VAR <str> (258) 10 11 21
    CONST <str> (259) 22
    PRED <str> (260) 18
    FUNC <str> (261) 23
    EOL <str> (262) 5 6 7
    FORALL (263) 10
    EXISTS (264) 11
    AND (265) 14
    OR (266) 15
    NOT (267) 13
    IMPLIES (268) 16
    IFF (269) 17


Nonterminals, with rules where they appear

    $accept (18)
        on left: 0
    input (19)
        on left: 1 2
        on right: 0
    formula_list <str> (20)
        on left: 3 4
        on right: 1 3
    formula <str> (21)
        on left: 5 6
        on right: 3 4
    wff <str> (22)
        on left: 7 8 9
        on right: 5 10 11 12 13 14 15 16 17
    composite_formula <str> (23)
        on left: 10 11 12 13 14 15 16 17
        on right: 9
    atomic_formula <str> (24)
        on left: 18
        on right: 8
    term_list <str> (25)
        on left: 19 20
        on right: 18 19 23
    term <str> (26)
        on left: 21 22 23
        on right: 19 20


State 0

    0 $accept: . input $end

    error   shift, and go to state 1
    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    $end  reduce using rule 2 (input)

    input              go to state 8
    formula_list       go to state 9
    formula            go to state 10
    wff                go to state 11
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 1

    6 formula: error . EOL

    EOL  shift, and go to state 14


State 2

   18 atomic_formula: PRED . '(' term_list ')'

    '('  shift, and go to state 15


State 3

    7 wff: EOL .

    $default  reduce using rule 7 (wff)


State 4

   10 composite_formula: FORALL . VAR wff

    VAR  shift, and go to state 16


State 5

   11 composite_formula: EXISTS . VAR wff

    VAR  shift, and go to state 17


State 6

   13 composite_formula: NOT . wff

    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    wff                go to state 18
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 7

   12 composite_formula: '(' . wff ')'

    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    wff                go to state 19
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 8

    0 $accept: input . $end

    $end  shift, and go to state 20


State 9

    1 input: formula_list .
    3 formula_list: formula_list . formula

    error   shift, and go to state 1
    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    $end  reduce using rule 1 (input)

    formula            go to state 21
    wff                go to state 11
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 10

    4 formula_list: formula .

    $default  reduce using rule 4 (formula_list)


State 11

    5 formula: wff . EOL
   14 composite_formula: wff . AND wff
   15                  | wff . OR wff
   16                  | wff . IMPLIES wff
   17                  | wff . IFF wff

    EOL      shift, and go to state 22
    AND      shift, and go to state 23
    OR       shift, and go to state 24
    IMPLIES  shift, and go to state 25
    IFF      shift, and go to state 26


State 12

    9 wff: composite_formula .

    $default  reduce using rule 9 (wff)


State 13

    8 wff: atomic_formula .

    $default  reduce using rule 8 (wff)


State 14

    6 formula: error EOL .

    $default  reduce using rule 6 (formula)


State 15

   18 atomic_formula: PRED '(' . term_list ')'

    VAR    shift, and go to state 27
    CONST  shift, and go to state 28
    FUNC   shift, and go to state 29

    term_list  go to state 30
    term       go to state 31


State 16

   10 composite_formula: FORALL VAR . wff

    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    wff                go to state 32
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 17

   11 composite_formula: EXISTS VAR . wff

    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    wff                go to state 33
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 18

   13 composite_formula: NOT wff .
   14                  | wff . AND wff
   15                  | wff . OR wff
   16                  | wff . IMPLIES wff
   17                  | wff . IFF wff

    $default  reduce using rule 13 (composite_formula)


State 19

   12 composite_formula: '(' wff . ')'
   14                  | wff . AND wff
   15                  | wff . OR wff
   16                  | wff . IMPLIES wff
   17                  | wff . IFF wff

    AND      shift, and go to state 23
    OR       shift, and go to state 24
    IMPLIES  shift, and go to state 25
    IFF      shift, and go to state 26
    ')'      shift, and go to state 34


State 20

    0 $accept: input $end .

    $default  accept


State 21

    3 formula_list: formula_list formula .

    $default  reduce using rule 3 (formula_list)


State 22

    5 formula: wff EOL .

    $default  reduce using rule 5 (formula)


State 23

   14 composite_formula: wff AND . wff

    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    wff                go to state 35
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 24

   15 composite_formula: wff OR . wff

    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    wff                go to state 36
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 25

   16 composite_formula: wff IMPLIES . wff

    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    wff                go to state 37
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 26

   17 composite_formula: wff IFF . wff

    PRED    shift, and go to state 2
    EOL     shift, and go to state 3
    FORALL  shift, and go to state 4
    EXISTS  shift, and go to state 5
    NOT     shift, and go to state 6
    '('     shift, and go to state 7

    wff                go to state 38
    composite_formula  go to state 12
    atomic_formula     go to state 13


State 27

   21 term: VAR .

    $default  reduce using rule 21 (term)


State 28

   22 term: CONST .

    $default  reduce using rule 22 (term)


State 29

   23 term: FUNC . '(' term_list ')'

    '('  shift, and go to state 39


State 30

   18 atomic_formula: PRED '(' term_list . ')'
   19 term_list: term_list . ',' term

    ')'  shift, and go to state 40
    ','  shift, and go to state 41


State 31

   20 term_list: term .

    $default  reduce using rule 20 (term_list)


State 32

   10 composite_formula: FORALL VAR wff .
   14                  | wff . AND wff
   15                  | wff . OR wff
   16                  | wff . IMPLIES wff
   17                  | wff . IFF wff

    AND      shift, and go to state 23
    OR       shift, and go to state 24
    IMPLIES  shift, and go to state 25
    IFF      shift, and go to state 26

    AND       [reduce using rule 10 (composite_formula)]
    OR        [reduce using rule 10 (composite_formula)]
    IMPLIES   [reduce using rule 10 (composite_formula)]
    IFF       [reduce using rule 10 (composite_formula)]
    $default  reduce using rule 10 (composite_formula)


State 33

   11 composite_formula: EXISTS VAR wff .
   14                  | wff . AND wff
   15                  | wff . OR wff
   16                  | wff . IMPLIES wff
   17                  | wff . IFF wff

    AND      shift, and go to state 23
    OR       shift, and go to state 24
    IMPLIES  shift, and go to state 25
    IFF      shift, and go to state 26

    AND       [reduce using rule 11 (composite_formula)]
    OR        [reduce using rule 11 (composite_formula)]
    IMPLIES   [reduce using rule 11 (composite_formula)]
    IFF       [reduce using rule 11 (composite_formula)]
    $default  reduce using rule 11 (composite_formula)


State 34

   12 composite_formula: '(' wff ')' .

    $default  reduce using rule 12 (composite_formula)


State 35

   14 composite_formula: wff . AND wff
   14                  | wff AND wff .
   15                  | wff . OR wff
   16                  | wff . IMPLIES wff
   17                  | wff . IFF wff

    $default  reduce using rule 14 (composite_formula)


State 36

   14 composite_formula: wff . AND wff
   15                  | wff . OR wff
   15                  | wff OR wff .
   16                  | wff . IMPLIES wff
   17                  | wff . IFF wff

    AND  shift, and go to state 23

    $default  reduce using rule 15 (composite_formula)


State 37

   14 composite_formula: wff . AND wff
   15                  | wff . OR wff
   16                  | wff . IMPLIES wff
   16                  | wff IMPLIES wff .
   17                  | wff . IFF wff

    AND  shift, and go to state 23
    OR   shift, and go to state 24

    $default  reduce using rule 16 (composite_formula)


State 38

   14 composite_formula: wff . AND wff
   15                  | wff . OR wff
   16                  | wff . IMPLIES wff
   17                  | wff . IFF wff
   17                  | wff IFF wff .

    AND  shift, and go to state 23
    OR   shift, and go to state 24

    $default  reduce using rule 17 (composite_formula)


State 39

   23 term: FUNC '(' . term_list ')'

    VAR    shift, and go to state 27
    CONST  shift, and go to state 28
    FUNC   shift, and go to state 29

    term_list  go to state 42
    term       go to state 31


State 40

   18 atomic_formula: PRED '(' term_list ')' .

    $default  reduce using rule 18 (atomic_formula)


State 41

   19 term_list: term_list ',' . term

    VAR    shift, and go to state 27
    CONST  shift, and go to state 28
    FUNC   shift, and go to state 29

    term  go to state 43


State 42

   19 term_list: term_list . ',' term
   23 term: FUNC '(' term_list . ')'

    ')'  shift, and go to state 44
    ','  shift, and go to state 41


State 43

   19 term_list: term_list ',' term .

    $default  reduce using rule 19 (term_list)


State 44

   23 term: FUNC '(' term_list ')' .

    $default  reduce using rule 23 (term)
